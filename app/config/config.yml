imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@AppBundle/Resources/config/services.yml" }
    - { resource: "@AppBundle/Resources/config/projection.xml" }
    - { resource: "@AppBundle/Resources/config/repository.xml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

prooph_service_bus:
  command_buses:
    main:
      message_factory: 'Prooph\Common\Messaging\MessageFactory'
      router:
        type: 'Prooph\ServiceBus\Plugin\Router\CommandRouter'
        routes:
          'Prooph\ProophessorDo\Model\User\Command\RegisterUser': 'Prooph\ProophessorDo\Model\User\Handler\RegisterUserHandler'
          'Prooph\ProophessorDo\Model\Todo\Command\PostTodo': 'Prooph\ProophessorDo\Model\Todo\Handler\PostTodoHandler'
          'Prooph\ProophessorDo\Model\Todo\Command\MarkTodoAsDone': 'Prooph\ProophessorDo\Model\Todo\Handler\MarkTodoAsDoneHandler'
          'Prooph\ProophessorDo\Model\Todo\Command\ReopenTodo': 'Prooph\ProophessorDo\Model\Todo\Handler\ReopenTodoHandler'
          'Prooph\ProophessorDo\Model\Todo\Command\AddDeadlineToTodo': 'Prooph\ProophessorDo\Model\Todo\Handler\AddDeadlineToTodoHandler'
          'Prooph\ProophessorDo\Model\Todo\Command\AddReminderToTodo': 'Prooph\ProophessorDo\Model\Todo\Handler\AddReminderToTodoHandler'
          'Prooph\ProophessorDo\Model\Todo\Command\MarkTodoAsExpired': 'Prooph\ProophessorDo\Model\Todo\Handler\MarkTodoAsExpiredHandler'
          'Prooph\ProophessorDo\Model\Todo\Command\RemindTodoAssignee': 'Prooph\ProophessorDo\Model\Todo\Handler\RemindTodoAssigneeHandler'

  event_buses:
    main:
      plugins:
        - 'Prooph\ServiceBus\Plugin\InvokeStrategy\OnEventStrategy'
      message_factory: 'Prooph\Common\Messaging\MessageFactory'
      router:
        type: 'Prooph\ServiceBus\Plugin\Router\EventRouter'
        routes:
          'Prooph\ProophessorDo\Model\User\Event\UserWasRegistered':
            - 'Prooph\ProophessorDo\Projection\User\UserProjector'

          'Prooph\ProophessorDo\Model\Todo\Event\TodoWasPosted':
            - 'Prooph\ProophessorDo\Projection\Todo\TodoProjector'
            - 'Prooph\ProophessorDo\Projection\User\UserProjector'

          'Prooph\ProophessorDo\Model\Todo\Event\TodoWasMarkedAsDone':
            - 'Prooph\ProophessorDo\Projection\Todo\TodoProjector'
            - 'Prooph\ProophessorDo\Projection\User\UserProjector'

          'Prooph\ProophessorDo\Model\Todo\Event\TodoWasReopened':
            - 'Prooph\ProophessorDo\Projection\Todo\TodoProjector'
            - 'Prooph\ProophessorDo\Projection\User\UserProjector'

          'Prooph\ProophessorDo\Model\Todo\Event\DeadlineWasAddedToTodo':
            - 'Prooph\ProophessorDo\Projection\Todo\TodoProjector'

          'Prooph\ProophessorDo\Model\Todo\Event\ReminderWasAddedToTodo':
            - 'Prooph\ProophessorDo\Projection\Todo\TodoProjector'
            - 'Prooph\ProophessorDo\Projection\Todo\TodoReminderProjector'

          'Prooph\ProophessorDo\Model\Todo\Event\TodoAssigneeWasReminded':
            - 'Prooph\ProophessorDo\Projection\Todo\TodoProjector'
            - 'Prooph\ProophessorDo\Projection\Todo\TodoReminderProjector'
            - 'Prooph\ProophessorDo\ProcessManager\SendTodoReminderMailSubscriber'

          'Prooph\ProophessorDo\Model\Todo\Event\TodoWasMarkedAsExpired':
            - 'Prooph\ProophessorDo\Projection\Todo\TodoProjector'
            - 'Prooph\ProophessorDo\Projection\User\UserProjector'
            - 'Prooph\ProophessorDo\ProcessManager\SendTodoDeadlineExpiredMailSubscriber'

          'Prooph\ProophessorDo\Model\Todo\Event\TodoWasUnmarkedAsExpired':
            - 'Prooph\ProophessorDo\Projection\Todo\TodoProjector'
            - 'Prooph\ProophessorDo\Projection\User\UserProjector'

prooph_event_store:
  stores:
    main:
      adapter: 'prooph.event_store.doctrine_adapter.main_store'
      repositories:
        todo_list:
            repository_class: 'Prooph\ProophessorDo\Infrastructure\Repository\EventStoreTodoList'
            aggregate_type: 'Prooph\ProophessorDo\Model\Todo\Todo'
            aggregate_translator: 'Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator'

        user_collection:
            repository_class: 'Prooph\ProophessorDo\Infrastructure\Repository\EventStoreUserCollection'
            aggregate_type: 'Prooph\ProophessorDo\Model\User\User'
            aggregate_translator: 'Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator'

doctrine_migrations:
  dir_name: "%kernel.root_dir%/DoctrineMigrations"
  namespace: Prooph\ProophessorDo\Migrations
  table_name: migration_versions
  name: ProophessorDo Migrations
